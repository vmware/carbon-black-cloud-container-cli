package image

import (
	"fmt"
	"strings"
)

// VulnerabilityCyclon is the actual description of a vulnerable artifact.
type VulnerabilityCyclon struct {
	Ref         string      `xml:"ref,attr"`
	ID          string      `xml:"v:id"`
	Source      Source      `xml:"v:source"`
	Ratings     []Rating    `xml:"v:ratings>v:rating"`
	Description string      `xml:"v:description,omitempty"`
	Advisories  *Advisories `xml:"v:advisories,omitempty"`
}

// Source is the origin of the vulnerability, like GitHub Advisories or NVD, along
// with a URL constructed with the vulnerability ID.
type Source struct {
	Name string `xml:"name,attr"`
	URL  string `xml:"v:url"`
}

// Rating has information about the intensity of a vulnerability.
type Rating struct {
	Score    *Score `xml:"v:score,omitempty"`
	Severity string `xml:"v:severity,omitempty"`
	Method   string `xml:"v:method,omitempty"`
	Vector   string `xml:"v:vector,omitempty"`
}

// Score provides the different ways to measure how serious a vulnerability is.
type Score struct {
	Base           float64 `xml:"v:base"`
	Impact         float64 `xml:"v:impact"`
	Exploitability float64 `xml:"v:exploitability"`
}

// Advisories holds all the links for a vulnerability.
type Advisories struct {
	Advisory []string `xml:"v:fixAvailable"`
}

// MakeVulnerabilityURL create vulnerability url.
func MakeVulnerabilityURL(id string) string {
	if strings.HasPrefix(id, "CVE-") {
		return fmt.Sprintf("http://cve.mitre.org/cgi-bin/cvename.cgi?name=%s", id)
	}

	if strings.HasPrefix(id, "GHSA") {
		return fmt.Sprintf("https://github.com/advisories/%s", id)
	}

	return id
}
